name: Build

on:
  push:
    tags:
      - "1.*"
      - "2.*"
      - "3.*"
    branches:
  pull_request:
  workflow_dispatch:

jobs:
  build-electron-old-linux:
    strategy:
      fail-fast: false
      matrix:
        electron:
          [
            22.3.0,
            22.2.0,
            22.1.0,
            22.0.0,
            21.4.0,
            21.3.0,
            21.2.0,
            21.1.0,
            21.0.0,
            20.3.3,
            20.2.0,
            20.1.0,
            20.0.3,
            19.1.0,
            19.0.0,
            18.3.0,
            18.2.0,
            18.1.0,
            18.0.0,
            17.4.0,
            17.3.0,
            17.2.0,
            17.1.0,
            17.0.0,
            16.0.1,
            15.3.0,
            15.2.0,
            15.1.2,
            15.0.0,
            14.2.0,
            14.1.0,
            14.0.1,
            13.6.0,
            13.5.0,
            13.4.0,
            13.3.0,
            13.2.3,
            13.1.0,
            13.0.0,
            12.0.0,
            11.4.7,
            11.3.0,
            11.2.0,
            11.1.0,
            11.0.0,
          ]
        include:
          - electron_mocha_version: ^11
            python_version: "3.6"
            node: 16.13.2
          - electron: 22.3.0
            node: 16.17.1
          - electron: 22.2.0
            node: 16.17.1
          - electron: 22.1.0
            node: 16.17.1
          - electron: 22.0.0
            node: 16.17.1
          - electron: 21.4.0
            node: 16.16.0
          - electron: 21.3.0
            node: 16.16.0
          - electron: 21.2.0
            node: 16.16.0
          - electron: 21.1.0
            node: 16.16.0
          - electron: 21.0.0
            node: 16.16.0
          - electron: 20.3.3
            node: 16.15.0
          - electron: 20.2.0
            node: 16.15.0
          - electron: 20.1.0
            node: 16.15.0
          - electron: 20.0.3
            node: 16.15.0
          - electron: 19.1.0
            node: 16.14.2
          - electron: 19.0.0
            node: 16.14.2
          - electron: 18.3.0
            node: 16.13.2
          - electron: 18.2.0
            node: 16.13.2
          - electron: 18.1.0
            node: 16.13.2
          - electron: 18.0.0
            node: 16.13.2
          - electron: 17.4.0
            node: 16.13.0
          - electron: 17.3.0
            node: 16.13.0
          - electron: 17.2.0
            node: 16.13.0
          - electron: 17.1.0
            node: 16.13.0
          - electron: 17.0.0
            node: 16.13.0
          - electron: 16.0.1
            node: 16.9.1
          - electron: 15.3.0
            node: 16.5.0
          - electron: 15.2.0
            node: 16.5.0
          - electron: 15.1.2
            node: 16.5.0
          - electron: 15.0.0
            node: 16.5.0
          - electron: 14.2.0
            node: 14.17.0
          - electron: 14.1.0
            node: 14.17.0
          - electron: 14.0.1
            node: 14.17.0
          - electron: 13.6.0
            node: 14.17.0
          - electron: 13.5.0
            node: 14.17.0
          - electron: 13.4.0
            node: 14.17.0
          - electron: 13.3.0
            node: 14.17.0
          - electron: 13.2.3
            node: 14.17.0
          - electron: 13.1.0
            node: 14.17.0
          - electron: 13.0.0
            node: 14.17.0
          - electron: 12.0.0
            node: 14.16.0
          - electron: 11.4.7
            node: 12
            python_version: ""
          - electron: 11.3.0
            node: 12
            python_version: ""
          - electron: 11.2.0
            node: 12
            python_version: ""
          - electron: 11.1.0
            node: 12
            python_version: ""
          - electron: 11.0.0
            node: 12
            python_version: ""
    runs-on: ubuntu-latest
    container:
      image: ubuntu:bionic
      credentials:
        username: "${{ secrets.DOCKER_USERNAME }}"
        password: "${{ secrets.DOCKER_PASSWORD }}"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          architecture: x64
      - run: node --version
      - run: npm --version
      - run: apt-get update && apt-get --yes install libatk-bridge2.0-0 libatk1.0-0 libnss3 libglib2.0-0 sudo python-minimal build-essential python3.6
      - run: apt-get -y install clang libdbus-1-dev libgtk2.0-dev libnotify-dev libgnome-keyring-dev libgconf2-dev libasound2-dev libcap-dev libcups2-dev libxtst-dev libxss1 libnss3-dev gcc-multilib g++-multilib
      - run: apt-get --yes install -y libgbm1 gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libnss3 lsb-release xdg-utils wget ca-certificates
      - run: npm config set unsafe-perm true
      - run: npm config set msbuild_path "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe"
        if: ${{ runner.os == 'Windows' }}
      - run: npm install --build-from-source
        env:
          npm_config_arch: x64
          npm_config_target_arch: x64
          npm_config_target: ${{ matrix.electron }}
          npm_config_disturl: https://artifacts.electronjs.org/headers/dist
          npm_config_runtime: electron
          npm_config_python: python${{ matrix.python_version }}
          CFLAGS: ${{ matrix.extra_compile_flags }}
          CPPFLAGS: ${{ matrix.extra_compile_flags }}
      - run: npm install -g electron@${{ matrix.electron }} electron-mocha@${{ matrix.electron_mocha_version }}
      - name: Run test
        uses: coactions/setup-xvfb@v1
        with:
          working-directory: ./ #optional
          run: npm run test:electron -- --no-sandbox --disable-dev-shm-usage
        if: ${{ matrix.target_architecture != 'arm64' }}
        env:
          DISPLAY: ":99"
          APP_DATA_PATH: /tmp/${_deviceId}/
      - run: ./node_modules/.bin/node-pre-gyp package testpackage
        env:
          npm_config_runtime: electron
          npm_config_target: ${{ matrix.electron }}
        if: ${{ matrix.target_architecture != 'arm64' }}
      - run: ./node_modules/.bin/node-pre-gyp package --target_arch=${{ matrix.target_architecture }}
        if: ${{ matrix.target_architecture == 'arm64' }}
        env:
          npm_config_runtime: electron
          npm_config_target: ${{ matrix.electron }}
      - uses: actions/upload-artifact@v3
        with:
          path: build/stage/julianhille/MuhammaraJS/releases/download/**/*.gz
          name: bindings
          if-no-files-found: error
